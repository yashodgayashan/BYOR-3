{"id":121,"name":"Trigger","displayName":"Azure Service Bus","documentation":"","moduleName":"trigger.asb","serviceTypes":[{"name":"MessageService","description":"Triggers when Choreo recieves a new message from Azure service bus. Available action: onMessage\n","functions":[{"isRemote":true,"documentation":"Triggers when a new message is received from Azure service bus\n","name":"onMessage","parameters":[{"name":"message","typeName":"record","optional":false,"typeInfo":{"name":"Message","orgName":"ballerinax","moduleName":"trigger.asb","version":"0.5.1"},"displayAnnotation":{},"documentation":"The Azure service bus message recieved\n","hasRestType":false,"defaultable":false,"fields":[{"members":[{"typeName":"string","optional":false,"defaultable":false},{"typeName":"xml","optional":false,"defaultable":false},{"typeName":"json","optional":false,"defaultable":false},{"memberType":{"typeName":"byte","optional":false,"defaultable":false},"typeName":"array","optional":false,"defaultable":false}],"name":"body","typeName":"union","optional":false,"defaultable":false},{"name":"contentType","typeName":"string","optional":true,"defaultable":false},{"name":"messageId","typeName":"string","optional":true,"defaultable":false},{"name":"to","typeName":"string","optional":true,"defaultable":false},{"name":"replyTo","typeName":"string","optional":true,"defaultable":false},{"name":"replyToSessionId","typeName":"string","optional":true,"defaultable":false},{"name":"label","typeName":"string","optional":true,"defaultable":false},{"name":"sessionId","typeName":"string","optional":true,"defaultable":false},{"name":"correlationId","typeName":"string","optional":true,"defaultable":false},{"name":"partitionKey","typeName":"string","optional":true,"defaultable":false},{"name":"timeToLive","typeName":"int","optional":true,"defaultable":false},{"name":"sequenceNumber","typeName":"int","optional":true,"defaultable":false},{"name":"lockToken","typeName":"string","optional":true,"defaultable":false},{"fields":[{"paramType":{"typeName":"string","optional":false,"defaultable":false},"name":"properties","typeName":"map","optional":true,"defaultable":false}],"hasRestType":false,"name":"applicationProperties","typeName":"record","optional":true,"typeInfo":{"name":"ApplicationProperties","orgName":"ballerinax","moduleName":"trigger.asb","version":"0.5.1"},"defaultable":false}]},{"name":"caller","typeName":"object","optional":false,"typeInfo":{"name":"Caller","orgName":"ballerinax","moduleName":"trigger.asb","version":"0.5.1"},"displayAnnotation":{},"documentation":"The Azure service bus caller instance\n","defaultable":false,"fields":[]}],"returnType":{"typeName":"error","optional":true,"displayAnnotation":{},"documentation":"Error on failure else nil()\n","defaultable":false},"displayAnnotation":{}}],"displayAnnotation":{}}],"listenerParams":[{"name":"listenerConfig","typeName":"record","optional":false,"typeInfo":{"name":"ListenerConfig","orgName":"ballerinax","moduleName":"trigger.asb","version":"0.5.1"},"displayAnnotation":{},"documentation":"The configurations to be used when initializing the `listener`\n","hasRestType":true,"defaultable":false,"fields":[{"name":"connectionString","typeName":"string","optional":false,"defaultable":false},{"name":"entityPath","typeName":"string","optional":false,"defaultable":false},{"name":"receiveMode","typeName":"string","optional":true,"defaultable":false}],"restType":{"typeName":"anydata","optional":false,"defaultable":false}}],"listenerProtocol":"generic","displayAnnotation":{"label":"Azure Service Bus","iconPath":"docs/icon.png"},"package":{"organization":"ballerinax","name":"trigger.asb","version":"0.5.1","platform":"java11","languageSpecificationVersion":"2022R3","isDeprecated":false,"deprecateMessage":"","URL":"/ballerinax/trigger.asb/0.5.1","balaVersion":"2.0.0","balaURL":"https://fileserver.dev-central.ballerina.io/2.0/ballerinax/trigger.asb/0.5.1/ballerinax-trigger.asb-java11-0.5.1.bala?md5=tSpo4fo1eeFXysxO6Q5zMQ&expires=1675220797","digest":"sha-256=68be2328d23a343b9c05eadfff46fcb516f3447a85fb00db49d138af91bdf6e7","summary":"Listen to [Microsoft Azure Service Bus](https://docs.microsoft.com/en-us/java/api/overview/azure/servicebus/client?view=azure-java-stable&preserve-view=true) from Ballerina.","readme":"Listen to [Microsoft Azure Service Bus](https://docs.microsoft.com/en-us/java/api/overview/azure/servicebus/client?view=azure-java-stable&preserve-view=true) from Ballerina.\n\n## Package overview\n\nThe `ballerinax/trigger.asb` is a [Ballerina](https://ballerina.io/) trigger for Microsoft Azure Service Bus.\nThis package provides the capability to access Microsoft Azure Service Bus messages from Service Bus queues, topics, and subscriptions, etc.\n\n### Compatibility\n\n|                            | Version                      |\n|----------------------------|------------------------------|\n| Ballerina Language         | Ballerina Swan Lake 2201.0.0 |\n| Azure Service Bus SDK      | 3.5.1                        |\n\n## Report issues\n\nTo report bugs, request new features, start new discussions, view project boards, etc., go to the [Ballerina AsyncAPI Triggers repository](https://github.com/ballerina-platform/asyncapi-triggers)\n\n## Useful links\n\n- Discuss code changes of the Ballerina project in [ballerina-dev@googlegroups.com](mailto:ballerina-dev@googlegroups.com).\n- Chat live with us via our [Slack channel](https://ballerina.io/community/slack/).\n- Post all technical questions on Stack Overflow with the [#ballerina](https://stackoverflow.com/questions/tagged/ballerina) tag","template":false,"licenses":["Apache-2.0"],"authors":["Ballerina"],"sourceCodeLocation":"https://github.com/ballerina-platform/asyncapi-triggers","keywords":["IT Operations/Message Brokers","Cost/Paid","Vendor/Microsoft"],"ballerinaVersion":"2201.2.3","icon":"https://bcentral-dev-packageicons.azureedge.net/images/ballerinax_trigger.asb_0.5.1.png","ownerUUID":"ed5d06a2-39fd-4cbd-ba56-037cfd893d9d","createdDate":1667971685000,"pullCount":11,"visibility":"public","modules":[{"packageURL":"/ballerinax/trigger.asb/0.5.1","apiDocURL":"https://dev-lib.ballerina.io/ballerinax/trigger.asb/0.5.1","name":"trigger.asb","summary":"The `ballerinax/trigger.asb` module supports asynchronous message listening capabilities from the [Azure Service Bus](https://docs.microsoft.com/en-us/azure/service-bus-messaging/) via the Ballerina language. ","readme":"## Overview\n\nThe `ballerinax/trigger.asb` module supports asynchronous message listening capabilities from the [Azure Service Bus](https://docs.microsoft.com/en-us/azure/service-bus-messaging/) via the Ballerina language. \nThis module supports [Service Bus SDK 3.5.1 version](https://docs.microsoft.com/en-us/java/api/overview/azure/servicebus/client?view=azure-java-stable&preserve-view=true). \nThe source code on GitHub is located [here](https://github.com/Azure/azure-sdk-for-java/tree/main/sdk/servicebus/microsoft-azure-servicebus). \nThe primary wire protocol for Service Bus is Advanced Messaging Queueing Protocol (AMQP) 1.0, an open ISO/IEC standard.\n\n## Prerequisites\n\nBefore using this connector in your Ballerina application, complete the following:\n\n* Create an Azure account and a subscription. If you don't have an Azure\n  subscription, [sign up for a free Azure account](https://azure.microsoft.com/free/).\n\n* Create a Service Bus namespace. If you don't\n  have [a service bus namespace](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-create-namespace-portal)\n  , learn how to create your Service Bus namespace.\n\n* Create a messaging entity, such as a queue, topic or subscription. If you don't have these items, learn how to\n    * [Create a queue in the Azure portal](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-portal#create-a-queue-in-the-azure-portal)\n    * [Create a topic using the Azure portal](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-topics-subscriptions-portal#create-a-topic-using-the-azure-portal)\n    * [Create subscriptions to the topic](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-topics-subscriptions-portal#create-subscriptions-to-the-topic)\n\n* Obtain tokens\n\n  Shared Access Signature (SAS) Authentication Credentials are required to communicate with the Azure Service Bus.\n    * Connection String\n    * Entity Path\n\n  Obtain the authorization credentials:\n    * For Service Bus Queues\n\n        1. [Create a namespace in the Azure portal](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-portal#create-a-namespace-in-the-azure-portal)\n\n        2. [Get the connection string](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-portal#get-the-connection-string)\n\n        3. [Create a queue in the Azure portal & get Entity Path](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-portal#create-a-queue-in-the-azure-portal)\n           . It is in the format ‘queueName’.\n\n    * For Service Bus Topics and Subscriptions\n\n        1. [Create a namespace in the Azure portal](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-portal#create-a-namespace-in-the-azure-portal)\n\n        2. [Get the connection string](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-portal#get-the-connection-string)\n\n        3. [Create a topic in the Azure portal & get Entity Path](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-topics-subscriptions-portal#create-a-topic-using-the-azure-portal)\n           . It's in the format ‘topicName‘.\n\n        4. [Create a subscription in the Azure portal & get Entity Path](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-topics-subscriptions-portal#create-subscriptions-to-the-topic)\n           . It’s in the format ‘topicName/subscriptions/subscriptionName’.\n\n## Quickstart\n\nTo use the Azure Service Bus listener in your Ballerina application, update the .bal file as follows:\n\n### Step 1: Import listener\n\nImport the `ballerinax/trigger.asb` module as shown below.\n```ballerina\nimport ballerinax/trigger.asb;\n```\n\n### Step 2: Create a new listener instance\n```ballerina\nasb:ListenerConfig configuration = {\n    connectionString: \"CONNECTION_STRING\",\n    entityPath: \"QUEUE_NAME_OR_SUBSCRIPTION_PATH\",\n    receiveMode: \"PEEKLOCK_OR_RECEIVEANDDELETE\"\n};\n\nlistener asb:Listener asbListener = new (configuration);\n```\n\n### Step 3: Implement a listener remote function\n1. Now you can implement a listener remote function supported by this connector.\n\n* Write a remote function to receive messages from the Azure Service Bus. \n  Implement your logic within that function as shown in the below sample.\n\n* Following is an example on how to listen to messages from the Azure Service Bus using the Azure Service Bus listener. Optionally\n  you can provide the receive mode which is PEEKLOCK by default. You can find more information about the receive\n  modes [here](https://docs.microsoft.com/en-us/java/api/com.microsoft.azure.servicebus.receivemode?view=azure-java-stable).\n\n   Listen to Messages from the Azure Service Bus\n\n   **!!! NOTE:**\n   When configuring the listener, the entity path for a Queue is the entity name (Eg: \"myQueueName\") and the entity path\n   for a subscription is in the following format `<topicName>/subscriptions/<subscriptionName>`\n   (Eg: \"myTopicName/subscriptions/mySubscriptionName\").\n\n    ```ballerina\n    import ballerina/lang.value; \n    import ballerina/log;\n    import ballerinax/trigger.asb;\n\n    asb:ListenerConfig configuration = {\n        connectionString: \"CONNECTION_STRING\",\n        entityPath: \"QUEUE_NAME_OR_SUBSCRIPTION_PATH\",\n        receiveMode: asb:PEEKLOCK\n    };\n\n    listener asb:Listener asbListener = new (configuration);\n\n    service asb:MessageService on asbListener {\n        isolated remote function onMessage(asb:Message message, asb:Caller caller) returns error? {\n            // Write your logic here\n            log:printInfo(\"Azure service bus message as byte[] which is the standard according to the AMQP protocol\" + \n            message.toString());\n            string|xml|json|byte[] received = message.body;\n\n            match message?.contentType {\n                asb:JSON => {\n                    string stringMessage = check string:fromBytes(<byte[]> received);\n                    json jsonMessage = check value:fromJsonString(stringMessage);\n                    log:printInfo(\"The message received: \" + jsonMessage.toJsonString());\n                }\n                asb:XML => {\n                    string stringMessage = check 'string:fromBytes(<byte[]> received);\n                    xml xmlMessage = check 'xml:fromString(stringMessage);\n                    log:printInfo(\"The message received: \" + xmlMessage.toString());\n                }\n                asb:TEXT => {\n                    string stringMessage = check 'string:fromBytes(<byte[]> received);\n                    log:printInfo(\"The message received: \" + stringMessage);\n                }\n            }\n\n            _ = check caller.complete(message);\n        }\n    };\n    ```\n\n   **!!! NOTE:**\n   In the ASB listener we receive the message body as byte[] which is the standard according to the AMQP protocol. \n   We haven't re-engineered the listener. Rather we provide the message body as a standard byte[]. \n   So the user must do the conversion based on the content type of the message. \n   We have provided a sample code segment above, where you can do the conversion easily.\n   You can also complete, abandon, deadLetter, defer, renewLock, and setPrefetchCount using the `asb:Caller` instance.\n\n2. Use `bal run` command to compile and run the Ballerina program."}]},"triggerType":"asb","httpBased":false}